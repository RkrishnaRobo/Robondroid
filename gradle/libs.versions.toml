[versions]
applicationId = "com.master.robondroid"
applicationName = "Robondroid"
compileSdk = "35"
javaxInject = "1"
junitJupiter = "5.10.1"
kotlinxCoroutinesTest = "1.7.3"
ktorClientMock = "2.3.0"
material = "1.7.7"
minSdk = "25"
mockk = "1.13.9"
versionName = "1.0"

androidxComposeCompiler = "1.5.12"  # Compose VC
accompanistPermission = "0.32.0"
activity-compose = "1.10.0"
androidx-junit = "1.2.1"
animatedNavigationBar = "1.0.0"
coil = "2.6.0"
coreSplashscreen = "1.0.1"
flingerVersion = "1.3.0"
composeDestination = "1.11.6"
constraintLayout = "1.1.0"
androidGradlePlugin = "8.5.2"
detekt = "1.23.3"
detektCompose = "0.3.8"
ksp = "2.0.20-1.0.25"
core-ktx = "1.15.0"
previewseekbarMedia3 = "1.1.1.0"
rhinoAndroid = "1.7.15"
serialization = "1.6.3"
serializationPlugin = "2.0.0"
kotlinxCoroutines = "1.10.1"
kotlin = "2.0.20"
dataStore = "1.1.2"
espresso-core = "3.6.1"
fontAwesomeCompose = "1.1.0"
googleMaterial = "1.12.0"
gson = "2.10.1"
hilt = "2.51.1"
hiltNavigation = "1.2.0"
junit = "4.13.2"
lifecycleRuntime = "2.8.7"
lottieVersion = "6.4.0"
media3Session = "1.5.1"
mediarouter = "1.7.0"
playServicesCastFramework = "22.0.0"
room = "2.6.1"
androidxComposeBom = "2025.01.00"
tvCompose = "1.0.0"
youtubePlayer = "12.1.0"
accompanist = "0.35.1-alpha"
palette = "1.0.0"
ktor_version = "2.3.12"
firebase-auth = "23.1.0"

#Robondroid Provider library versions
appcompat = "1.7.0"
nicehttp = "0.4.10"
fuzzywuzzy = "1.4.0"
okhttp = "4.12.0"
okhttpDnsoverhttps = "5.0.0-alpha.9"
jacksonModuleKotlin = "2.13.1"
json = "20240303"
jsoup = "1.17.2"
androidDesugarJdkLibs = "2.1.4"
tvFoundation = "1.0.0-alpha12"

[libraries]
# SplashScreen API
androidx-core-splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "coreSplashscreen" }
javax-inject = { module = "javax.inject:javax.inject", version.ref = "javaxInject" }
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junitJupiter" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinxCoroutinesTest" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }
kotlinx-coroutines-core = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "kotlinxCoroutines" }

desugarJdkLibs = { group = "com.android.tools", name = "desugar_jdk_libs", version.ref = "androidDesugarJdkLibs" }
# detekt
detekt-gradlePlugin = { group = "io.gitlab.arturbosch.detekt", name = "detekt-gradle-plugin", version.ref = "detekt" }
detekt-formatting = { group = "io.gitlab.arturbosch.detekt", name = "detekt-formatting", version.ref = "detekt" }
detekt-compose = { group = "io.nlopez.compose.rules", name = "detekt", version.ref = "detektCompose" }

# Compose Libraries
compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "androidxComposeBom" }
androidx-compose-ui = { module = "androidx.compose.ui:ui" }
androidx-compose-ui-viewbinding = { module = "androidx.compose.ui:ui-viewbinding" }
androidx-compose-ui-graphics = { module = "androidx.compose.ui:ui-graphics" }
androidx-compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview" }
androidx-compose-foundation = { module = "androidx.compose.foundation:foundation" }
androidx-compose-animation-graphics = { module = "androidx.compose.animation:animation-graphics" }
androidx-compose-animation = { module = "androidx.compose.animation:animation" }
androidx-compose-material-icons-extended = { module = "androidx.compose.material:material-icons-extended" }
androidx-compose-material3 = { module = "androidx.compose.material3:material3" }
androidx-ui-test-manifest = { module = "androidx.compose.ui:ui-test-manifest" }
androidx-compose-ui-test-junit4 = { module = "androidx.compose.ui:ui-test-junit4" }
androidx-compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling" }

# Compose TV libraries
androidx-tv-material = { module = "androidx.tv:tv-material", version.ref = "tvCompose" }

accompanist-permissions = { module = "com.google.accompanist:accompanist-permissions", version.ref = "accompanistPermission" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "activity-compose" }
androidx-constraintlayout-compose = { module = "androidx.constraintlayout:constraintlayout-compose", version.ref = "constraintLayout" }
androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "core-ktx" }
androidx-datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "dataStore" }
androidx-espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "espresso-core" }
androidx-junit = { module = "androidx.test.ext:junit", version.ref = "androidx-junit" }
androidx-lifecycle-runtime-compose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "lifecycleRuntime" }
ktor-client-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktorClientMock" }
lifecycle-viewModelCompose = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-compose", version.ref = "lifecycleRuntime" }
androidx-lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycleRuntime" }

# Media3 Libraries
androidx-media3-common = { module = "androidx.media3:media3-common", version.ref = "media3Session" }
androidx-media3-exoplayer = { module = "androidx.media3:media3-exoplayer", version.ref = "media3Session" }
androidx-media3-exoplayer-dash = { module = "androidx.media3:media3-exoplayer-dash", version.ref = "media3Session" }
androidx-media3-exoplayer-hls = { module = "androidx.media3:media3-exoplayer-hls", version.ref = "media3Session" }
androidx-media3-session = { module = "androidx.media3:media3-session", version.ref = "media3Session" }
androidx-media3-ui = { module = "androidx.media3:media3-ui", version.ref = "media3Session" }


# Cast Framework Libraries
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
play-services-cast-framework = { module = "com.google.android.gms:play-services-cast-framework", version.ref = "playServicesCastFramework" }
androidx-mediarouter = { module = "androidx.mediarouter:mediarouter", version.ref = "mediarouter" }

# Room database libraries
androidx-room-ktx = { module = "androidx.room:room-ktx", version.ref = "room" }
androidx-room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
androidx-room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }

# Ktor Client
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor_version" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor_version" }
ktor-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor_version" }
ktor-serialization-gson = { module = "io.ktor:ktor-serialization-gson", version.ref = "ktor_version" }
okhttp-logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }
ktor-serialization-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor_version" }
ktor-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor_version" }

#Firebase
firebase-auth = { group = "com.google.firebase", name = "firebase-auth", version.ref = "firebase-auth" }

# preview seeker
previewseekbar-media3 = { module = "com.github.rubensousa:previewseekbar-media3", version.ref = "previewseekbarMedia3" }

# custom animation
iamjosephmj-flinger = { module = "com.github.iamjosephmj:Flinger", version.ref = "flingerVersion" }

# Dagger Hilt Libraries
hilt-android = { group = "com.google.dagger", name = "hilt-android", version.ref = "hilt" }
hilt-compiler = { group = "com.google.dagger", name = "hilt-compiler", version.ref = "hilt" }
hilt-core = { group = "com.google.dagger", name = "hilt-core", version.ref = "hilt" }
androidx-hilt-navigation-compose = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "hiltNavigation" }

animated-navigation-bar = { module = "com.exyte:animated-navigation-bar", version.ref = "animatedNavigationBar" }

# Fuzzy Search
fuzzywuzzy = { module = "me.xdrop:fuzzywuzzy", version.ref = "fuzzywuzzy" }

# Raamcosta Navigation Libraries
raamcosta-animations-core = { module = "io.github.raamcosta.compose-destinations:animations-core", version.ref = "composeDestination" }
raamcosta-ksp = { module = "io.github.raamcosta.compose-destinations:ksp", version.ref = "composeDestination" }

# Coil Image Loading library
coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "coil" }

core = { module = "com.pierfrancescosoffritti.androidyoutubeplayer:core", version.ref = "youtubePlayer" }
font-awesome-compose = { module = "com.github.Gurupreet:FontAwesomeCompose", version.ref = "fontAwesomeCompose" }
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
junit = { module = "junit:junit", version.ref = "junit" }
lottie-compose = { module = "com.airbnb.android:lottie-compose", version.ref = "lottieVersion" }
material = { module = "com.google.android.material:material", version.ref = "googleMaterial" }

accompanist-navigation-animation = { module = "com.google.accompanist:accompanist-navigation-animation", version.ref = "accompanist" }
palette = { module = "androidx.palette:palette", version.ref = "palette" }

#Robondroid Provider libraries
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
nicehttp = { module = "com.github.Blatzar:NiceHttp", version.ref = "nicehttp" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okhttp-dnsoverhttps = { module = "com.squareup.okhttp3:okhttp-dnsoverhttps", version.ref = "okhttpDnsoverhttps" }
jackson-module-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jacksonModuleKotlin" }
json = { module = "org.json:json", version.ref = "json" }
jsoup = { module = "org.jsoup:jsoup", version.ref = "jsoup" }
rhino-android = { module = "org.mozilla:rhino", version.ref = "rhinoAndroid" }

# Dependencies for build-logic
android-gradlePlugin = { group = "com.android.tools.build", name = "gradle", version.ref = "androidGradlePlugin" }
kotlin-gradlePlugin = { group = "org.jetbrains.kotlin", name = "kotlin-gradle-plugin", version.ref = "kotlin" }
ksp-gradlePlugin = { group = "com.google.devtools.ksp", name = "com.google.devtools.ksp.gradle.plugin", version.ref = "ksp" }
room-gradlePlugin = { group = "androidx.room", name = "room-gradle-plugin", version.ref = "room" }
androidx-tv-foundation = { group = "androidx.tv", name = "tv-foundation", version.ref = "tvFoundation" }

[plugins]
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
hilt = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "serializationPlugin" }
android-application = { id = "com.android.application", version.ref = "androidGradlePlugin" }
android-library = { id = "com.android.library", version.ref = "androidGradlePlugin" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
room = { id = "androidx.room", version.ref = "room" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }


# Plugins defined by this project
robondroid-application = { id = "robondroid.android.application", version = "unspecified" }
robondroid-compose = { id = "robondroid.compose", version = "unspecified" }
robondroid-destinations = { id = "robondroid.destinations", version = "unspecified" }
robondroid-feature = { id = "robondroid.feature", version = "unspecified" }
robondroid-hilt = { id = "robondroid.hilt", version = "unspecified" }
robondroid-android-library = { id = "robondroid.android.library", version = "unspecified" }
robondroid-room = { id = "robondroid.room", version = "unspecified" }
robondroid-ktlint = { id = "robondroid.ktlint", version = "unspecified" }
robondroid-java-library = { id = "robondroid.java.library", version = "unspecified" }